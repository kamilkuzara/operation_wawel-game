#BlueJ class context
comment0.target=Character
comment0.text=\r\n\ Class\ Character\ is\ a\ part\ of\ "Operation\ Wawel"\ application.\r\n\ It\ defines\ character's\ features\ as\ well\ as\ behaviours.\r\n\r\n\ @author\ Kamil\ Kuzara\r\n\ @version\ 2018.11\r\n
comment1.params=startingRoom
comment1.target=Character(Room)
comment1.text=\r\n\ Constructor\ for\ objects\ of\ class\ Character\r\n
comment10.params=
comment10.target=int\ getMaxInjuriesNumber()
comment10.text=\r\n\ Return\ the\ maximum\ number\ of\ injuries\ the\ character\ can\ survive.\r\n\ \r\n\ @return\ int\ return\ the\ maximum\ number\ of\ injuries\r\n
comment11.params=
comment11.target=void\ receiveInjury()
comment11.text=\r\n\ Raceive\ an\ injury.\r\n
comment12.params=
comment12.target=void\ heal()
comment12.text=\r\n\ Heal\ an\ injury.\r\n
comment13.params=
comment13.target=boolean\ canHeal()
comment13.text=\r\n\ Check\ if\ the\ character\ can\ already\ heal,\ or\ do\ they\r\n\ have\ to\ perform\ more\ moves.\r\n\ \r\n\ @return\ boolean\ return\ TRUE\ if\ the\ character\ can\ get\ healed,\ FALSE\ otherwise\r\n
comment14.params=
comment14.target=boolean\ isDead()
comment14.text=\r\n\ Check\ is\ the\ character\ is\ dead.\r\n\ \r\n\ @return\ boolean\ return\ TRUE\ if\ the\ character\ is\ dead,\ FALSE\ otherwise\r\n
comment15.params=item
comment15.target=void\ addItem(Item)
comment15.text=\r\n\ Add\ an\ item\ to\ the\ list\ of\ character's\ items.\r\n\ Use\ only\ to\ assign\ items\ when\ they\ are\ created,\ \r\n\ i.e.\ at\ the\ beginning\ of\ the\ game.\r\n\ \r\n\ @param\ Item\ the\ item\ to\ be\ added\r\n
comment16.params=
comment16.target=void\ dropAllItems()
comment16.text=\r\n\ Drop\ all\ items\ the\ character\ is\ carrying.\r\n\ The\ items\ are\ dropped\ in\ the\ current\ room.\r\n\ Use\ when\ the\ character\ dies.\r\n
comment17.params=rooms
comment17.target=void\ dropAllItems(java.util.ArrayList)
comment17.text=\r\n\ Drop\ all\ items\ the\ character\ is\ carrying.\r\n\ The\ items\ are\ dropped\ in\ random\ rooms.\r\n\ Use\ when\ the\ character\ is\ captured.\r\n\ \r\n\ @param\ ArrayList<Room>\ the\ list\ of\ rooms\ to\ which\ the\ items\ will\ be\ put\r\n
comment18.params=itemName
comment18.target=Item\ getItem(java.lang.String)
comment18.text=\r\n\ Get\ the\ specified\ item.\r\n\ \r\n\ @param\ String\ name\ of\ the\ item\ that\ is\ to\ be\ returned\r\n\ @return\ Item\ return\ item\ if\ it\ was\ found,\ null\ otherwise\r\n
comment19.params=weight
comment19.target=boolean\ canLift(int)
comment19.text=\r\n\ Check\ if\ the\ character\ can\ pick\ up\ an\ item\ with\ the\ specified\ weight.\r\n\ \r\n\ @param\ int\ weight\ the\ character\ intends\ to\ lift\r\n\ @return\ boolean\ return\ TRUE\ if\ the\ character\ can\ lift\ the\ specified\ weight,\ FALSE\ otherwise\r\n
comment2.params=
comment2.target=Room\ getCurrentRoom()
comment2.text=\r\n\ Return\ the\ current\ location\ of\ the\ character.\r\n\r\n\ @return\ Room\ return\ current\ room,\ i.e.\ where\ the\ character\ is\r\n
comment20.params=weight
comment20.target=void\ increaseCarriedWeight(int)
comment20.text=\r\n\ Increase\ the\ carried\ weight\ after\ collecting\ an\ item.\r\n\ \r\n\ @param\ int\ weight\ of\ the\ collected\ item\r\n
comment21.params=weight
comment21.target=void\ decreaseCarriedWeight(int)
comment21.text=\r\n\ Decrease\ the\ carried\ weight\ after\ dropping\ an\ item.\r\n\ \r\n\ @param\ int\ weight\ of\ the\ dropped\ item\r\n
comment3.params=direction
comment3.target=void\ changeRoom(java.lang.String)
comment3.text=\r\n\ Change\ the\ current\ location\ to\ the\ one\ specified\ by\ the\ direction.\r\n\ \r\n\ @param\ String\ direction\ in\ which\ we\ want\ to\ move\r\n
comment4.params=direction
comment4.target=Character.MovePossibility\ isMovePossible(java.lang.String)
comment4.text=\r\n\ Check\ if\ a\ move\ is\ possible.\r\n\ \r\n\ @param\ String\ direction\ in\ which\ we\ want\ to\ move\ \r\n\ @return\ Character.MovePossibility\ return\ the\ possibility\ state\ of\ a\ move\r\n
comment5.params=character\ weapon
comment5.target=void\ attack(Character,\ Weapon)
comment5.text=\r\n\ Attack\ the\ specified\ character\ with\ the\ specified\ weapon.\r\n\ \r\n\ @param\ Character\ the\ character\ to\ be\ attacked\r\n\ @param\ Weapon\ the\ weapon\ to\ be\ used\r\n
comment6.params=
comment6.target=Weapon\ getWeapon()
comment6.text=\r\n\ Get\ a\ weapon\ from\ the\ list\ of\ character's\ items.\r\n\ Returns\ a\ useable\ weapon\ that\ was\ found\ first.\r\n\ \r\n\ @return\ Weapon\ useable\ weapon,\ no\ specific\ one\r\n
comment7.params=item
comment7.target=boolean\ isUseableWeapon(Item)
comment7.text=\r\n\ Check\ if\ the\ specified\ item\ is\ a\ useable\ weapon.\r\n\ \r\n\ @param\ Item\ item\ to\ be\ investigated\r\n\ @return\ boolean\ return\ TRUE\ if\ the\ item\ is\ a\ useable\ weapon,\ FALSE\ otherwise\r\n
comment8.params=
comment8.target=Character.AttackPossibility\ canAttack()
comment8.text=\r\n\ Check\ if\ the\ character\ is\ able\ to\ attack\ others.\r\n\ \r\n\ @return\ Character.AttackPossibility\ return\ the\ possibility\ state\ of\ an\ attack\r\n
comment9.params=
comment9.target=int\ getInjuriesNumber()
comment9.text=\r\n\ Return\ the\ current\ amount\ of\ injuries.\r\n\ \r\n\ @return\ int\ return\ the\ current\ number\ of\ injuries\r\n
numComments=22
