#BlueJ class context
comment0.target=Game
comment0.text=\r\n\ \ This\ class\ is\ the\ main\ class\ of\ the\ "Operation\ Wawel"\ application.\ \r\n\ \ "Operation\ Wawel"\ is\ a\ very\ involving,\ text\ based\ adventure\ game.\ \r\n\ \ The\ game\ is\ loosely\ based\ on\ historical\ events\ of\ World\ War\ II.\r\n\ \ The\ player's\ goal\ is\ to\ explore\ the\ Wawel\ Castle,\ in\ which\ precious\ artwork\r\n\ \ is\ kept,\ collect\ that\ artwork\ and\ safely\ get\ it\ out\ of\ the\ building.\r\n\ \ There\ are\ a\ number\ of\ things\ that\ are\ to\ make\ it\ a\ challenge.\ Some\ of\ the\r\n\ \ rooms\ are\ closed\ and\ can\ only\ be\ opened\ with\ a\ key,\ there\ are\ enemies\ \r\n\ \ that\ will\ try\ to\ attack\ the\ player.\r\n\ \r\n\ \ To\ play\ this\ game,\ create\ an\ instance\ of\ this\ class\ and\ call\ the\ "play"\r\n\ \ method.\r\n\ \r\n\ \ This\ main\ class\ creates\ and\ initialises\ all\ the\ others\:\ it\ creates\ all\r\n\ \ rooms,\ characters\ and\ items,\ creates\ the\ parser\ and\ starts\ the\ game.\r\n\ \ It\ also\ evaluates\ and\ executes\ the\ commands\ that\ the\ parser\ returns.\r\n\ \r\n\ @author\ \ Michael\ K\u00F6lling,\ David\ J.\ Barnes,\ Kamil\ Kuzara\r\n\ @version\ 2018.11\r\n
comment1.params=
comment1.target=Game()
comment1.text=\r\n\ Create\ the\ game\ and\ initialise\ its\ internal\ map.\r\n
comment10.params=
comment10.target=void\ moveCharacters()
comment10.text=\r\n\ Move\ all\ the\ characters\ (except\ the\ player).\r\n
comment11.params=character\ direction
comment11.target=void\ moveCharacter(Character,\ java.lang.String)
comment11.text=\r\n\ Move\ a\ single\ character.\r\n\ \r\n\ @param\ Character\ the\ character\ to\ move\r\n\ @param\ String\ direction\ in\ which\ to\ move\ the\ character\r\n
comment12.params=
comment12.target=void\ printInteractionMessage()
comment12.text=\r\n\ Print\ out\ the\ interaction\ opening\ message\ for\ the\ player.\r\n
comment13.params=room
comment13.target=boolean\ interaction(Room)
comment13.text=\r\n\ Check\ if\ there\ is\ an\ enemy\ in\ the\ room.\ If\ yes,\ trigger\ interaction.\r\n\ \r\n\ @param\ Room\ the\ room\ where\ the\ player\ is\r\n\ @return\ boolean\ return\ TRUE\ if\ the\ result\ ends\ the\ game,\ FALSE\ otherwise\r\n
comment14.params=room
comment14.target=boolean\ interact(Room)
comment14.text=\r\n\ Process\ interaction\ between\ the\ player\ and\ an\ enemy.\ A\ pseudorandom\r\n\ number\ is\ generated,\ based\ on\ which\ the\ type\ of\ interaction\ is\ chosen.\r\n\ The\ player\ will\ either\ be\ engaged\ in\ a\ fight\ with\ the\ enemy,\ or\ captured\r\n\ and\ transported\ (teleported)\ to\ a\ random\ room.\r\n\ \r\n\ @param\ Room\ the\ room\ where\ the\ player\ is\r\n\ @return\ boolean\ return\ TRUE\ if\ the\ result\ ends\ the\ game,\ FALSE\ otherwise\r\n
comment15.params=
comment15.target=void\ printTeleportingMessage()
comment15.text=\r\n\ Print\ out\ the\ capture\ message\ for\ the\ player.\r\n
comment16.params=
comment16.target=void\ printFightMessage()
comment16.text=\r\n\ Print\ out\ the\ fight\ opening\ message\ for\ the\ player.\r\n
comment17.params=player\ enemy
comment17.target=boolean\ fight(Player,\ Character)
comment17.text=\r\n\ Process\ a\ fight\ between\ two\ characters\:\ the\ player\ and\ an\ enemy.\r\n\ The\ fight\ goes\ on\ until\ one\ of\ the\ characters\ dies\ or\ the\ player\ \r\n\ decides\ to\ run\ away.\r\n\ \r\n\ @param\ Player\ the\ player\r\n\ @param\ Character\ the\ enemy\r\n\ @return\ boolean\ return\ TRUE\ if\ the\ result\ ends\ the\ game,\ FALSE\ otherwise\r\n
comment18.params=
comment18.target=boolean\ checkForWin()
comment18.text=\r\n\ Check\ if\ the\ player\ has\ won\ the\ game.\r\n\ \r\n\ @return\ boolean\ return\ TRUE\ if\ the\ player\ has\ won,\ FALSE\ otherwise\r\n
comment19.params=room
comment19.target=boolean\ isOccupied(Room)
comment19.text=\r\n\ Check\ if\ the\ given\ room\ is\ currently\ occupied\ by\ an\ enemy\ soldier.\r\n\ \r\n\ @param\ Room\ the\ room\ to\ inspect\r\n\ @return\ boolean\ return\ TRUE\ if\ the\ room\ is\ occupied,\ FALSE\ otherwise\r\n
comment2.params=
comment2.target=Room\ createRooms()
comment2.text=\r\n\ Create\ all\ the\ rooms\ and\ link\ their\ exits\ together.\r\n\ \r\n\ @return\ Room\ starting\ location\r\n
comment20.params=room
comment20.target=Character\ enemyInRoom(Room)
comment20.text=\r\n\ Get\ the\ enemy\ soldier\ in\ the\ specified\ room.\r\n\ \r\n\ @param\ Room\ the\ room\ to\ get\ the\ enemy\ from\r\n\ @return\ Character\ return\ the\ enemy\ if\ there\ is\ one,\ null\ otherwise\r\n
comment21.params=command
comment21.target=boolean\ processGo(Command)
comment21.text=\r\n\ Process\ the\ "go"\ command.\r\n\ \r\n\ @param\ Command\ the\ command\ to\ process\r\n\ @return\ boolean\ return\ TRUE\ if\ the\ move\ was\ possible,\ FALSE\ otherwise\r\n
comment22.params=
comment22.target=boolean\ processBack()
comment22.text=\r\n\ Process\ the\ "back"\ command.\ After\ executing\ the\ move,\r\n\ check\ if\ an\ interaction\ should\ be\ started\ in\ the\ new\ location.\r\n\ \r\n\ @return\ boolean\ return\ TRUE\ if\ the\ result\ ends\ the\ game,\ FALSE\ otherwise\r\n
comment23.params=command\ enemy
comment23.target=void\ processAttack(Command,\ Character)
comment23.text=\r\n\ Process\ the\ "attack"\ command.\r\n\ \r\n\ @param\ Command\ the\ command\ to\ process\r\n\ @param\ Character\ the\ enemy\ to\ be\ attacked\r\n
comment24.params=command
comment24.target=void\ processList(Command)
comment24.text=\r\n\ Process\ the\ "list"\ command.\r\n\ \r\n\ @param\ Command\ the\ command\ to\ process\r\n
comment25.params=command
comment25.target=void\ processCollect(Command)
comment25.text=\r\n\ Process\ the\ "collect"\ command.\r\n\ \r\n\ @param\ Command\ the\ command\ to\ process\r\n
comment26.params=command
comment26.target=void\ processDrop(Command)
comment26.text=\r\n\ Process\ the\ "drop"\ command.\r\n\ \r\n\ @param\ Command\ the\ command\ to\ process\r\n
comment27.params=command
comment27.target=void\ processOpen(Command)
comment27.text=\r\n\ Process\ the\ "open"\ command.\r\n\ \r\n\ @param\ Command\ the\ command\ to\ process\r\n
comment28.params=command
comment28.target=void\ processUse(Command)
comment28.text=\r\n\ Process\ the\ "use"\ command.\r\n\ \r\n\ @param\ Command\ the\ command\ to\ process\r\n
comment29.params=
comment29.target=void\ printHelp()
comment29.text=\r\n\ Print\ out\ help\ information.\r\n\ Here\ we\ print\ helpful\ information\ and\ a\ list\ of\ the\ \r\n\ command\ words.\r\n
comment3.params=
comment3.target=void\ createEnemies()
comment3.text=\r\n\ Create\ all\ the\ enemies.\r\n
comment30.params=command
comment30.target=boolean\ quit(Command)
comment30.text=\ \r\n\ "Quit"\ was\ entered.\ Check\ the\ rest\ of\ the\ command\ to\ see\r\n\ whether\ we\ really\ quit\ the\ game.\r\n\ \r\n\ @param\ Command\ the\ command\ to\ be\ processed\r\n\ @return\ boolean\ return\ TRUE\ if\ this\ command\ quits\ the\ game,\ FALSE\ otherwise.\r\n
comment4.params=
comment4.target=void\ createItems()
comment4.text=\r\n\ Create\ all\ items\ and\ assign\ them\ to\ various\ rooms,\ chests\ and\ characters.\r\n
comment5.params=
comment5.target=void\ createParser()
comment5.text=\r\n\ Create\ the\ parser.\r\n
comment6.params=args
comment6.target=void\ main(java.lang.String[])
comment6.text=\r\n\ Main\ method.\ Used\ to\ start\ the\ game.\r\n
comment7.params=
comment7.target=void\ play()
comment7.text=\r\n\ \ Main\ play\ routine.\ \ Loops\ until\ end\ of\ play.\r\n
comment8.params=
comment8.target=void\ printWelcome()
comment8.text=\r\n\ Print\ out\ the\ opening\ message\ for\ the\ player.\r\n
comment9.params=command
comment9.target=boolean\ processCommand(Command)
comment9.text=\r\n\ Given\ a\ command,\ process\ (that\ is\:\ execute)\ the\ command.\r\n\ \r\n\ @param\ Command\ the\ command\ to\ be\ processed\r\n\ @return\ boolean\ return\ TRUE\ if\ the\ command\ ends\ the\ game,\ FALSE\ otherwise\r\n
numComments=31
