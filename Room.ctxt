#BlueJ class context
comment0.target=Room
comment0.text=\r\n\ Class\ Room\ -\ a\ room\ in\ an\ adventure\ game.\r\n\r\n\ This\ class\ is\ part\ of\ the\ "Operation\ Wawel"\ application.\ \ \r\n\r\n\ A\ "Room"\ represents\ one\ location\ in\ the\ scenery\ of\ the\ game.\ \ It\ is\ \r\n\ connected\ to\ other\ rooms\ via\ exits.\ \ For\ each\ existing\ exit,\ the\ room\ \r\n\ stores\ a\ reference\ to\ the\ neighbouring\ room.\r\n\ \r\n\ @author\ \ Michael\ K\u00F6lling,\ David\ J.\ Barnes,\ Kamil\ Kuzara\r\n\ @version\ 2018.11\r\n
comment1.params=description
comment1.target=Room(java.lang.String)
comment1.text=\r\n\ Create\ a\ room\ described\ "description".\ Initially,\ it\ has\r\n\ no\ exits.\ "description"\ is\ something\ like\ "a\ kitchen"\ or\r\n\ "an\ open\ court\ yard".\r\n\ \r\n\ @param\ description\ The\ room's\ description.\r\n
comment10.params=direction
comment10.target=java.lang.String\ getOppositeDirection(java.lang.String)
comment10.text=\r\n\ Get\ an\ opposite\ direction\ to\ the\ one\ specified.\r\n
comment11.params=item
comment11.target=void\ addItem(Item)
comment11.text=\r\n\ Put\ the\ item\ in\ the\ room\ (f.e.\ when\ it\ is\ dropped\ by\ a\ character,\ \r\n\ when\ new\ item\ is\ created\ and\ has\ to\ be\ assigned\ to\ some\ room).\r\n\ I.e.\ add\ an\ item\ to\ the\ list\ of\ items\ stored\ in\ the\ room.\r\n\ \r\n\ @param\ Item\ item\ that\ is\ added\r\n
comment12.params=itemName
comment12.target=Item\ getItem(java.lang.String)
comment12.text=\r\n\ Get\ the\ specified\ item.\r\n\ \r\n\ @param\ String\ name\ of\ the\ item\ to\ return\r\n\ @return\ Item\ return\ item\ if\ there\ is\ one\ with\ the\ name\ "itemName",\ null\ otherwise\r\n
comment13.params=itemName
comment13.target=void\ removeItem(java.lang.String)
comment13.text=\r\n\ Remove\ the\ item\ from\ the\ room\ (f.e.\ when\ it\ gets\ collected\ by\ a\ character),\ \r\n\ i.e\ remove\ it\ from\ the\ list\ of\ items\ stored\ in\ the\ room.\r\n\ \r\n\ @param\ String\ name\ of\ the\ item\ to\ be\ removed\ from\ the\ list\r\n
comment14.params=
comment14.target=void\ listItems()
comment14.text=\r\n\ Print\ all\ the\ items\ there\ are\ in\ the\ room\ to\ System.out.\r\n
comment2.params=
comment2.target=java.lang.String\ getShortDescription()
comment2.text=\r\n\ @return\ The\ short\ description\ of\ the\ room\r\n\ (the\ one\ that\ was\ defined\ in\ the\ constructor).\r\n
comment3.params=
comment3.target=java.lang.String\ getLongDescription()
comment3.text=\r\n\ Return\ a\ description\ of\ the\ room\ in\ the\ form\:\r\n\ \ \ \ \ You\ are\ in\ the\ kitchen.\r\n\ \ \ \ \ Exits\:\ north\ west\r\n\ \ \ \ \ \r\n\ @return\ A\ long\ description\ of\ this\ room\r\n
comment4.params=
comment4.target=java.lang.String\ getExitString()
comment4.text=\r\n\ Return\ a\ string\ describing\ the\ room's\ exits,\ for\ example\r\n\ "Exits\:\ north\ west".\r\n\ \r\n\ @return\ Details\ of\ the\ room's\ exits.\r\n
comment5.params=direction\ neighbor\ state
comment5.target=void\ setExit(java.lang.String,\ Room,\ boolean)
comment5.text=\r\n\ Define\ an\ exit\ from\ this\ room.\r\n\ \r\n\ @param\ direction\ The\ direction\ of\ the\ exit.\r\n\ @param\ neighbour\ \ The\ room\ to\ which\ the\ exit\ leads.\r\n\ @param\ state\ Current\ state\ of\ the\ exit\ door.\r\n
comment6.params=direction
comment6.target=boolean\ isExitOpen(java.lang.String)
comment6.text=\r\n\ Check\ if\ the\ given\ exit\ is\ open.\r\n\ \r\n\ @param\ String\ the\ exit's\ direction.\r\n\ @return\ boolean\ return\ TRUE\ if\ the\ exit\ is\ open,\ FALSE\ otherwise\r\n
comment7.params=direction
comment7.target=Room\ getExit(java.lang.String)
comment7.text=\r\n\ Return\ the\ room\ that\ is\ reached\ if\ we\ go\ from\ this\ room\ in\ direction\r\n\ "direction".\ If\ there\ is\ no\ room\ in\ that\ direction,\ return\ null.\r\n\ \r\n\ @param\ direction\ The\ exit's\ direction.\r\n\ @return\ The\ room\ in\ the\ given\ direction.\r\n
comment8.params=
comment8.target=void\ openExits()
comment8.text=\r\n\ Open\ all\ exits\ of\ the\ room.\r\n
comment9.params=direction
comment9.target=void\ openExit(java.lang.String)
comment9.text=\r\n\ Open\ the\ specified\ exit\ of\ the\ room.\r\n\ \r\n\ @param\ String\ the\ direction\ in\ which\ the\ door\ should\ be\ opened\r\n
numComments=15
